var http = require("http");var fs = require("fs");var express = require("express");var io = require('socket.io')(http);var app = express();app.use(express.static('web_data'));var server = app.listen(8080);require('dns').lookup(require('os').hostname(), function (err, add, fam) {  console.log('server running on '+'addr: '+add+':8080');})//import * as tf from '@tensorflow/tfjs';const tf = require('@tensorflow/tfjs');// Optional Load the binding:// Use '@tensorflow/tfjs-node-gpu' if running with GPU.require('@tensorflow/tfjs-node');// Train a simple model:const model = tf.sequential();model.add(tf.layers.dense({units: 100, activation: 'relu', inputShape: [10]}));model.add(tf.layers.dense({units: 1, activation: 'linear'}));model.compile({optimizer: 'sgd', loss: 'meanSquaredError'});const xs = tf.randomNormal([100, 10]);const ys = tf.randomNormal([100, 1]);model.fit(xs, ys, {  epochs: 100,  callbacks: {    onEpochEnd: (epoch, log) => console.log(`Epoch ${epoch}: loss = ${log.loss}`)  }});